# My simple script to get HPCG working on my macbook pro with ubuntu installed
# ----------------------------------------------------------------------
# - shell --------------------------------------------------------------
# ----------------------------------------------------------------------
#
SHELL        = /bin/sh
#
CD           = cd
CP           = cp
LN_S         = ln -s -f
MKDIR        = mkdir -p
RM           = /bin/rm -f
TOUCH        = touch
#
# ----------------------------------------------------------------------
# - HPCG Directory Structure / HPCG library ------------------------------
# ----------------------------------------------------------------------
#
TOPdir       = .
SRCdir       = $(TOPdir)/src
INCdir       = $(TOPdir)/src
BINdir       = $(TOPdir)/bin
#
# ----------------------------------------------------------------------
# - Message Passing library (MPI) --------------------------------------
# ----------------------------------------------------------------------
# MPinc tells the  C  compiler where to find the Message Passing library
# header files,  MPlib  is defined  to be the name of  the library to be
# used. The variable MPdir is only used for defining MPinc and MPlib.
#
MPdir        =
MPinc        = -I/usr/lib/x86_64-linux-gnu/openmpi/include
MPlib        = /usr/lib/x86_64-linux-gnu/openmpi/lib
#
#
# ----------------------------------------------------------------------
# - HPCG includes / libraries / specifics -------------------------------
# ----------------------------------------------------------------------
#
HPCG_INCLUDES = -I$(INCdir) -I$(INCdir)/$(arch) $(MPinc)
HPCG_LIBS     =
#
# - Compile time options -----------------------------------------------
#
# -DHPCG_NO_MPI	        Define to disable MPI
# -DHPCG_NO_OPENMP	Define to disable OPENMP
# -DHPCG_CONTIGUOUS_ARRAYS Define to have sparse matrix arrays long and contiguous
# -DHPCG_DEBUG       	Define to enable debugging output
# -DHPCG_DETAILED_DEBUG Define to enable very detailed debugging output
#
# By default HPCG will:
#    *) Build with MPI enabled.
#    *) Build with OpenMP enabled.
#    *) Not generate debugging output.
#
HPCG_OPTS     = -DHPCG_NO_MPI -DHPCG_DEBUG -DTIMING_ON
#
# ----------------------------------------------------------------------
#
HPCG_DEFS     = $(HPCG_OPTS) $(HPCG_INCLUDES)
#
# ----------------------------------------------------------------------
# - Compilers / linkers - Optimization flags ---------------------------
# ----------------------------------------------------------------------
#
USERFLAGS    =
CXX          = /opt/nvidia/hpc_sdk/Linux_x86_64/2025/compilers/bin/nvc++
#CXXFLAGS     = $(HPCG_DEFS) -std=c++20 -O1 -mp -stdpar=multicore -Wall -Wextra -Wpedantic -Mbounds -ftemplate-depth=2048 -ftemplate-backtrace-limit=0 -v $(USERFLAGS)
CXXFLAGS     = $(HPCG_DEFS) -std=c++20 -O3 -mp -stdpar=multicore -ftemplate-depth=2048 $(USERFLAGS)
#CXX          = /usr/bin/clang++
#CXXFLAGS     = $(HPCG_DEFS) -std=c++20 -O3 -ffast-math -fopenmp -Wall -Wextra -pedantic -fsanitize=address -fsanitize=leak -ftemplate-depth=2048 $(USERFLAGS)
#
LINKER       = $(CXX)
LINKFLAGS    = $(CXXFLAGS)
#
ARCHIVER     = ar
ARFLAGS      = r
RANLIB       = echo
#
# ----------------------------------------------------------------------
